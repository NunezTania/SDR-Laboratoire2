<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="96597984-09df-44c3-a8c1-1f54c5238989" name="Changes" comment=":)">
      <change beforePath="$PROJECT_DIR$/test/serverclient_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/serverclient_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="ThreeGoroutinesInServ" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2G7jD0jL5rXIAGHbUuzLXUBTNRN" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/FNGUSER004&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\FNGUSER004\GolandProjects\SDR-Laboratoire2\main\server\processMutex" />
      <recent name="C:\Users\FNGUSER004\GolandProjects\SDR-Laboratoire2" />
      <recent name="C:\Users\FNGUSER004\GolandProjects\SDR-Laboratoire2\main\server\server" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test SDR-Laboratoire1/test (2)">
    <configuration name="go build SDR-Laboratoire1/main/server" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="SDR-Laboratoire1" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SDR-Laboratoire1/main/server" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main/server/server.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestAddUserToEventShouldAppearOnOtherServ in SDR-Laboratoire1/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SDR-Laboratoire1" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SDR-Laboratoire1/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestAddUserToEventShouldAppearOnOtherServ\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCreateEventWithUnsuccessfulAuth in SDR-Laboratoire1/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SDR-Laboratoire1" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SDR-Laboratoire1/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateEventWithUnsuccessfulAuth\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCreateOnOneServShouldBeOnAnother in SDR-Laboratoire1/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SDR-Laboratoire1" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SDR-Laboratoire1/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCreateOnOneServShouldBeOnAnother\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test SDR-Laboratoire1/test (2)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="SDR-Laboratoire1" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="SDR-Laboratoire1/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test SDR-Laboratoire1/test (2)" />
        <item itemvalue="Go Test.TestCreateOnOneServShouldBeOnAnother in SDR-Laboratoire1/test" />
        <item itemvalue="Go Build.go build SDR-Laboratoire1/main/server" />
        <item itemvalue="Go Test.TestAddUserToEventShouldAppearOnOtherServ in SDR-Laboratoire1/test" />
        <item itemvalue="Go Test.TestCreateEventWithUnsuccessfulAuth in SDR-Laboratoire1/test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="list of posts" />
    <MESSAGE value="comments" />
    <MESSAGE value="capacity test" />
    <MESSAGE value="update" />
    <MESSAGE value="add the number for each server" />
    <MESSAGE value="update readme and add file progress" />
    <MESSAGE value="add of lamport clock" />
    <MESSAGE value="some changes" />
    <MESSAGE value="avancement" />
    <MESSAGE value="class mutex" />
    <MESSAGE value="more stuff" />
    <MESSAGE value="server communication works" />
    <MESSAGE value="PLus de probleme de conv" />
    <MESSAGE value="PLus de probleme de check pour la SC" />
    <MESSAGE value="Data sync semble fonctionner entre processus" />
    <MESSAGE value="Enlevé affichage de test" />
    <MESSAGE value="Adaptation des packages, modification en conséquent du client et retrait des config hardcodées" />
    <MESSAGE value="Client run sur un serveur random" />
    <MESSAGE value="Enlevé l'affichage de debug dans le client" />
    <MESSAGE value="Correction du crash si le client quitte prématurement avant de faire une cmd" />
    <MESSAGE value="Marche avec un seul serveur aussi..." />
    <MESSAGE value="Plus de crash à cause du client qui se ferme prematurement" />
    <MESSAGE value="Lecture des users et events depuis le fichier yaml" />
    <MESSAGE value="Ajout de tests pour cas serveurs multiples" />
    <MESSAGE value=":)" />
    <option name="LAST_COMMIT_MESSAGE" value=":)" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>